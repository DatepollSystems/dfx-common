image: timbru31/node-chrome:latest

stages:
  - build
  - deploy

build:
  stage: build
  except:
    - main
  artifacts:
    paths:
      - dist/
  cache:
    paths:
      - node_modules/
  script:
    - npm install --loglevel=error --no-progress
    - npm run ngcc # Run ngcc, if ng build does it, the ci breaks sometimes (not enough memory)
    - npm run helper:build
    - npm run translate:build
    - cd dist/
    - ls -al

test:
  stage: build
  except:
    - main
  only:
    - branches
  dependencies: []
  artifacts:
    paths:
      - coverage/
  cache:
    paths:
      - node_modules/
  allow_failure: true
  script:
#    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
#    - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
#    - apt-get update -qq && apt-get install -y -qq google-chrome-stable >> /dev/null
#    - export CHROME_BIN=/usr/bin/google-chrome
    - npm install --loglevel=error --no-progress
    - npm run ngcc # Run npm-script ngcc, if ng build does it, the ci breaks sometimes (not enough memory)
    - npm run helper:test:ci

deploy-helper-dev:
  stage: deploy
  dependencies:
    - build
  only:
    - develop
  cache: {}
  script:
    - apt-get update -qq && apt-get install -y -qq zip openssh-client >> /dev/null
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - cd dist/
    - zip -r dfx-helper-dev.zip ./dfx-helper >> /dev/null
    - scp -P $SSH_PORT -o StrictHostKeyChecking=no -o LogLevel=ERROR ./dfx-helper-dev.zip $SSH_USERNAME@$SSH_HOST:/var/www/datepoll-share/common/dfx-helper/ > /dev/null

deploy-helper-release-zip:
  stage: deploy
  dependencies:
    - build
  only:
    - tags
  except:
    - branches
  cache: {}
  allow_failure: true
  script:
    - apt-get update -qq && apt-get install -y -qq zip git openssh-client >> /dev/null
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - version=$(git describe --tags $(git rev-list --tags --max-count=1))
    - cd dist/
    - zip -r "dfx-helper-${version}.zip" ./dfx-helper >> /dev/null
    - cp "dfx-helper-${version}.zip" dfx-helper-latest.zip
    - scp -P $SSH_PORT -o StrictHostKeyChecking=no -o LogLevel=ERROR ./dfx-helper-latest.zip $SSH_USERNAME@$SSH_HOST:/var/www/datepoll-share/common/dfx-helper/ > /dev/null
    - scp -P $SSH_PORT -o StrictHostKeyChecking=no -o LogLevel=ERROR "dfx-helper-${version}.zip" $SSH_USERNAME@$SSH_HOST:/var/www/datepoll-share/common/dfx-helper/ > /dev/null

deploy-helper-release-npm:
  stage: deploy
  allow_failure: true
  dependencies:
    - build
  only:
    - tags
  except:
    - branches
  cache: {}
  script:
    - cd dist/dfx-helper/
    - npm config set //registry.npmjs.org/:_authToken ${NPM_PUBLISH_TOKEN}
    - npm publish

deploy-translate-dev:
  stage: deploy
  dependencies:
    - build
  only:
    - develop
  cache: {}
  script:
    - apt-get update -qq && apt-get install -y -qq zip openssh-client >> /dev/null
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - cd dist/
    - zip -r dfx-translate-dev.zip ./dfx-translate >> /dev/null
    - scp -P $SSH_PORT -o StrictHostKeyChecking=no -o LogLevel=ERROR ./dfx-translate-dev.zip $SSH_USERNAME@$SSH_HOST:/var/www/datepoll-share/common/dfx-translate/ > /dev/null

deploy-translate-release-zip:
  stage: deploy
  allow_failure: true
  dependencies:
    - build
  only:
    - tags
  except:
    - branches
  cache: {}
  script:
    - apt-get update -qq && apt-get install -y -qq zip git openssh-client >> /dev/null
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - version=$(git describe --tags $(git rev-list --tags --max-count=1))
    - cd dist/
    - zip -r "dfx-translate-${version}.zip" ./dfx-translate >> /dev/null
    - cp "dfx-translate-${version}.zip" dfx-translate-latest.zip
    - scp -P $SSH_PORT -o StrictHostKeyChecking=no -o LogLevel=ERROR ./dfx-translate-latest.zip $SSH_USERNAME@$SSH_HOST:/var/www/datepoll-share/common/dfx-translate/ > /dev/null
    - scp -P $SSH_PORT -o StrictHostKeyChecking=no -o LogLevel=ERROR "dfx-translate-${version}.zip" $SSH_USERNAME@$SSH_HOST:/var/www/datepoll-share/common/dfx-translate/ > /dev/null

deploy-helper-release-npm:
  stage: deploy
  allow_failure: true
  dependencies:
    - build
  only:
    - tags
  except:
    - branches
  cache: {}
  script:
    - cd dist/dfx-translate/
    - npm config set //registry.npmjs.org/:_authToken ${NPM_PUBLISH_TOKEN}
    - npm publish
